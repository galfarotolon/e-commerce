{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_REVIEW_REQUEST","PRODUCT_REVIEW_SUCCESS","PRODUCT_REVIEW_FAIL","PRODUCT_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","cart","cartItems","shippingAddress","item","itemExists","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","userList","users","userDelete","userUpdate","productDelete","productCreate","productUpdate","orderList","orderDeliver","productReview","productTopRated","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","render","Collapse","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","Meta","description","keywords","Helmet","content","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successReview","loadingReview","errorReview","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","clasName","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","idx","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","console","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1509417f.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS_RESET'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_REVIEW_REQUEST = 'PRODUCT_REVIEW_REQUEST'\r\nexport const PRODUCT_REVIEW_SUCCESS = 'PRODUCT_REVIEW_SUCCESS'\r\nexport const PRODUCT_REVIEW_FAIL = 'PRODUCT_REVIEW_FAIL'\r\nexport const PRODUCT_REVIEW_RESET = 'PRODUCT_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\n\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewReducer, productTopRatedReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    productReview: productReviewReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\n\r\n\r\n\r\nexport default store","import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_RESET, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET, PRODUCT_DETAILS_RESET, PRODUCT_REVIEW_REQUEST, PRODUCT_REVIEW_SUCCESS, PRODUCT_REVIEW_FAIL, PRODUCT_REVIEW_RESET, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_DETAILS_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const itemExists = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (itemExists) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === itemExists.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS, } from \"../constants/userConstants\"\r\n\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {},\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_RESET } from '../constants/orderConstants.js'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import axios from \"axios\"\r\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS\r\n\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control type='text' name='query' onChange={(e) => setKeyword(e.target.value)} placeholder='search products...' className='mr-sm-2 ml-sm-5'>\r\n\r\n            </Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>\r\n                Search\r\n            </Button>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\n\r\nfunction Header() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>E-Store</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Route render={({ history }) => <SearchBox history={history} />} />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : <LinkContainer to='/login'>\r\n                                    <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\r\n                                </LinkContainer>}\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n\r\n                            )}\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar >\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return <footer>\r\n        <Container>\r\n            <Row>\r\n                <Col className='text-center py-3'>\r\n                    Copyright &copy; E-Store\r\n                    </Col>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{ color }} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n//set default star color to yellow without the need to pass it as a prop from Product\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top'>\r\n                </Card.Img>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'><strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border' role='status' style={{\r\n            width: '100px',\r\n            height: '100px',\r\n            margin: 'auto',\r\n            display: 'block',\r\n\r\n        }}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, keyword = '', isAdmin = false }) => {\r\n\r\n\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x + 1} to={\r\n                    !isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/admin/productlist/${x + 1}`}>\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keywords' content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default Meta\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To The E-Store',\r\n    description: 'We sell the best electronics',\r\n    keywords: 'electronics, buy electronics, cheap electronics'\r\n}\r\n\r\n","import axios from 'axios'\r\n\r\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_REVIEW_FAIL, PRODUCT_REVIEW_SUCCESS, PRODUCT_REVIEW_REQUEST, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL, } from '../constants/productConstants'\r\n\r\n\r\n\r\n\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DELETE_REQUEST })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n\r\n        })\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/${product._id}`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const reviewProduct = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_REVIEW_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        await axios.post(\r\n            `/api/products/${productId}/reviews`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_REVIEW_SUCCESS,\r\n\r\n        })\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\n\r\nconst ProductCarousel = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return error ? <Message variant='danger'>{error}</Message> :\r\n        (\r\n            <Carousel pause='hover' className='bg-dark'>\r\n                {products.map(product => (\r\n                    <Carousel.Item key={product._id}>\r\n                        <Link to={`/product/${product._id}`}>\r\n                            <Image src={product.image} alt={product.name} fluid />\r\n                            <Carousel.Caption className='carousel-caption'>\r\n                                <h2>{product.name} (${product.price})</h2>\r\n                            </Carousel.Caption>\r\n                        </Link>\r\n                    </Carousel.Item>\r\n                ))}\r\n            </Carousel>\r\n        )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ match }) {\r\n\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-dark'>Back</Link>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader>Loading...</Loader> : error ? <Message variant='danger'>{error}</Message> :\r\n                <>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n                </>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport { listProductDetails, reviewProduct } from '../actions/productActions'\r\nimport { PRODUCT_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    // const product = products.find(prod => prod._id === match.params.id)\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReview = useSelector(state => state.productReview)\r\n    const { success: successReview, loading: loadingReview, error: errorReview } = productReview\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (successReview) {\r\n            setRating(0)\r\n            setComment('')\r\n\r\n        }\r\n        if (!product._id || product._id !== match.params.id) {\r\n            dispatch(listProductDetails(match.params.id))\r\n            dispatch({ type: PRODUCT_REVIEW_RESET })\r\n        }\r\n\r\n    }, [dispatch, match, successReview])\r\n\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(reviewProduct(match.params.id, {\r\n            rating, comment\r\n        }))\r\n\r\n    }\r\n\r\n\r\n    return <>\r\n\r\n        <Link className='btn btn-dark my-3' to='/'>Go Back</Link>\r\n        {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <>\r\n                <Meta title={product.name} />\r\n                <Row>\r\n\r\n                    <Col md={6}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <ListGroup variant='flush'>\r\n\r\n                            <ListGroup.Item>\r\n                                <h3>{product.name}</h3>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Price: ${product.price}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Description: {product.description}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            Price:\r\n                            </Col>\r\n                                        <Col>\r\n                                            <strong>${product.price}</strong>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            Satus:\r\n                            </Col>\r\n                                        <Col>\r\n                                            {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                {product.countInStock > 0 && (\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Qty</Col>\r\n                                            <Col>\r\n                                                <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\r\n\r\n                                                    {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                                <ListGroup.Item>\r\n                                    <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock === 0}>\r\n                                        Add To Cart\r\n                  </Button>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <h2>Reviews</h2>\r\n                        {product.reviews.length === 0 && <Message>No Reviews Yet</Message>}\r\n                        <ListGroup variant='flush'>\r\n                            {product.reviews.map(review => (\r\n                                <ListGroup.Item key={review._id}>\r\n                                    <strong>{review.name}</strong>\r\n                                    <Rating value={review.rating} />\r\n                                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                                    <p>{review.comment}</p>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Write A Review!</h2>\r\n                                {successReview && (\r\n                                    <Message variant='success'>\r\n                                        Review submitted successfully\r\n                                    </Message>\r\n                                )}\r\n                                {loadingReview && <Loader />}\r\n                                {errorReview && (\r\n                                    <Message variant='danger'>{errorReview}</Message>\r\n                                )}\r\n                                {userInfo ? (\r\n                                    <Form onSubmit={submitHandler}>\r\n                                        <Form.Group controlId='rating'>\r\n                                            <Form.Label>Rating</Form.Label>\r\n                                            <Form.Control\r\n                                                as='select'\r\n                                                value={rating}\r\n                                                onChange={(e) => setRating(e.target.value)}\r\n                                            >\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Poor</option>\r\n                                                <option value='2'>2 - Fair</option>\r\n                                                <option value='3'>3 - Good</option>\r\n                                                <option value='4'>4 - Very Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId='comment'>\r\n                                            <Form.Label>Comment</Form.Label>\r\n                                            <Form.Control\r\n                                                as='textarea'\r\n                                                row='3'\r\n                                                value={comment}\r\n                                                onChange={(e) => setComment(e.target.value)}\r\n                                            ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Button\r\n                                            disabled={loadingReview}\r\n                                            type='submit'\r\n                                            variant='primary'\r\n                                        >\r\n                                            Submit\r\n                      </Button>\r\n                                    </Form>\r\n                                ) : (\r\n                                        <Message>\r\n                                            Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                                        </Message>\r\n                                    )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )}\r\n    </>\r\n\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n//location to get query strings that are not id\r\nconst CartScreen = ({ match, location, history }) => {\r\n    //get id from url\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    //destructure to get what we need from state\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n\r\n        dispatch(removeFromCart(id))\r\n        history.push('/cart')\r\n\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        //if not logged in, go to login, else redirect to shipping\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <Message>Your Cart is Empty <Link to='/'>Go Back</Link></Message> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n\r\n                                            {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n\r\n\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                        ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                                Proceed to Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //dispatch login\r\n        dispatch(login(email, password))\r\n\r\n    }\r\n\r\n\r\n    return <FormContainer>\r\n        <h1>\r\n            Sign In\r\n\r\n        </h1>\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler} >\r\n            <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n\r\n                    type='email'\r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n                Sign In\r\n            </Button>\r\n        </Form>\r\n        <Row clasName='py-3'>\r\n            <Col>\r\n                New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n    </FormContainer >\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //dispatch register\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords must match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return <FormContainer>\r\n        <h1>\r\n            Sign Up\r\n\r\n        </h1>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler} >\r\n            <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n\r\n                    type='name'\r\n                    placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n\r\n                    type='email'\r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='confirmPassword'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                    type='password'\r\n                    placeholder='Confirm password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n                Register\r\n            </Button>\r\n        </Form>\r\n        <Row clasName='py-3'>\r\n            <Col>\r\n                Already Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n    </FormContainer >\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //dispatch register\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords must match')\r\n        } else {\r\n            // dispatch update profile\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return <Row>\r\n\r\n        <Col md={3}>\r\n            <h2>USER PROFILE</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler} >\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Update Profile\r\n            </Button>\r\n            </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>My Orders</h2>\r\n            {loadingOrders ? (\r\n                <Loader />\r\n            ) : errorOrders ? (\r\n                <Message variant='danger'>{errorOrders}</Message>\r\n            ) : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map((order) => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>{order.totalPrice}</td>\r\n                                        <td>\r\n                                            {order.isPaid ? (\r\n                                                order.paidAt.substring(0, 10)\r\n                                            ) : (\r\n                                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                                )}\r\n                                        </td>\r\n                                        <td>\r\n                                            {order.isDelivered ? (\r\n                                                order.deliveredAt.substring(0, 10)\r\n                                            ) : (\r\n                                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                                )}\r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm' variant='light'>\r\n                                                    Details\r\n                      </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n\r\n\r\n\r\n                    )}\r\n\r\n        </Col>\r\n    </Row>\r\n}\r\n\r\nexport default ProfileScreen","import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//payment result  comes from paypal api\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n\r\n                        type='text'\r\n                        placeholder='Enter postal Code'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Stripe'\r\n                            id='Stripe'\r\n                            name='paymentMethod'\r\n                            value='Stripe'\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    //always add 2 dec places even if its 0\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    //calc prices\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n\r\n\r\n        }))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Address:</strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Ordered Items</h2>\r\n\r\n                            {cart.cartItems.length === 0 ? <Message>Your Cart Is Empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, idx) => (\r\n                                        <ListGroup.Item key={idx}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )\r\n\r\n                                    )}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading) {\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        //calc prices\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            //dispatch the action\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            }\r\n            else {\r\n                setSdkReady(true)\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }, [order, orderId, successPay, successDeliver, dispatch, userInfo, history])\r\n\r\n    //payment result from paypal api\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n        : <>\r\n\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong> {order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {order.shippingAddress.postalCode}, {order.shippingAddress.country}\r\n                            </p>\r\n\r\n                            {order.isDelivered ? <Message variant='success'>delivered on {order.deliveredAt}</Message> :\r\n                                <Message variant='danger'>Not delivered</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> :\r\n                                <Message variant='danger'>Not Paid</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Ordered Items</h2>\r\n\r\n                            {order.orderItems.length === 0 ? <Message>Order Is Empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, idx) => (\r\n                                        <ListGroup.Item key={idx}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )\r\n\r\n                                    )}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> :\r\n                                        <PayPalButton amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler} />\r\n\r\n                                    }\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                        Mark As Delivered\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row >\r\n        </>\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? (<i className='fas fa-check' style={{\r\n                                    color:\r\n                                        'green'\r\n                                }}></i>) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n\r\n\r\n\r\n                                </td>\r\n\r\n\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n\r\n\r\n                </Table>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate)\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [dispatch, history, userId, user, successUpdate])\r\n\r\n    // useEffect(() => {\r\n    //     if (!user || !user.isAdmin) {\r\n    //         history.push('/login');\r\n    //     } else {\r\n    //         if (successUpdate) {\r\n    //             dispatch({ type: USER_UPDATE_RESET });\r\n    //             history.push('/admin/userlist');\r\n    //         } else {\r\n    //             if (!user.name || userId !== user._id) {\r\n    //                 dispatch(getUserDetails(userId));\r\n    //             } else {\r\n    //                 setName(user.name);\r\n    //                 setEmail(user.email);\r\n    //                 setIsAdmin(user.isAdmin);\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }, [dispatch, history, user, userId, successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back\r\n      </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type='name'\r\n                                        placeholder='Enter name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control\r\n                                        type='email'\r\n                                        placeholder='Enter email'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='isadmin'>\r\n                                    <Form.Check\r\n                                        type='checkbox'\r\n                                        label='Is Admin'\r\n                                        checked={isAdmin}\r\n                                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                    ></Form.Check>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='primary'>\r\n                                    Update\r\n            </Button>\r\n                            </Form>\r\n                        )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            //keyword is an empty string since listproducts takes 2 params\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete user?')) {\r\n            //delete products here\r\n            dispatch(deleteProduct(id))\r\n        }\r\n\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        //create product\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}\r\n                                    </td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n\r\n\r\n\r\n                                    </td>\r\n\r\n\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n\r\n\r\n\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true} />\r\n\r\n                </>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate)\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = productUpdate\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/uploads', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock,\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n      </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type='name'\r\n                                        placeholder='Enter name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='price'>\r\n                                    <Form.Label>Price</Form.Label>\r\n                                    <Form.Control\r\n                                        type='number'\r\n                                        placeholder='Enter price'\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n\r\n                                <Form.Group controlId='image'>\r\n                                    <Form.Label>Image</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter image url'\r\n                                        value={image}\r\n                                        onChange={(e) => setImage(e.target.value)}\r\n                                    ></Form.Control>\r\n                                    <Form.File\r\n                                        id='image-file'\r\n                                        label='Choose File'\r\n                                        custom\r\n                                        onChange={uploadFileHandler}\r\n                                    ></Form.File>\r\n                                    {uploading && <Loader />}\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='brand'>\r\n                                    <Form.Label>Brand</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter brand'\r\n                                        value={brand}\r\n                                        onChange={(e) => setBrand(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='countInStock'>\r\n                                    <Form.Label>Count In Stock</Form.Label>\r\n                                    <Form.Control\r\n                                        type='number'\r\n                                        placeholder='Enter countInStock'\r\n                                        value={countInStock}\r\n                                        onChange={(e) => setCountInStock(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='category'>\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter category'\r\n                                        value={category}\r\n                                        onChange={(e) => setCategory(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='description'>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter description'\r\n                                        value={description}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='primary'>\r\n                                    Update\r\n            </Button>\r\n                            </Form>\r\n                        )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>\r\n                                    {order.createdAt.substring(0, 10)}\r\n                                </td>\r\n                                <td>${order.totalPrice}</td>\r\n\r\n                                <td>{order.isPaid ? (order.paidAt.substring(0, 10)) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                )}\r\n                                </td>\r\n                                <td>{order.isDelivered ? (order.deliveredAt.substring(0, 10)) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n\r\n\r\n\r\n\r\n                                </td>\r\n\r\n\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n\r\n\r\n                </Table>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} />\n          {/* to add pagination to the search functionality:  */}\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}